name: 'Build package'

on:
    - push

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version:
                    - '19.2.0'
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install dependencies
              run: npm ci

            - run: npm run check
            - run: npm run package
            - uses: actions/upload-artifact@v2
              with:
                  name: build
                  path: package
    publish:
        name: publish
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1
              with:
                  node-version: 19.2.0
            - run: echo ::set-output name=CURRENT_VERSION::$(node -p "require(\"./package.json\").version")
              id: current-version
            - uses: actions/download-artifact@v2
              # need to publish if the branch isn't master, or it is master and the version in package.json hasn't been published yet
              with:
                  name: build
                  path: package

            # publish canary version on every push to every branch except master
            - name: canary version
              run: cd package && npm version ${{ steps.current-version.outputs.CURRENT_VERSION }}-$GITHUB_SHA --git-tag-version false
            - name: canary publish
              uses: JS-DevTools/npm-publish@v1
              with:
                  token: ${{ secrets.NPM_TOKEN }}
                  package: ./package/package.json
                  access: public
                  tag: canary
